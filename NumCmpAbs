/* ************************************************************************ */
/* 機能概要	:	入力された2つの整数n1,n2の大小関係を「n1はn2より大きい」「n2*/
/*				はn1より大きい」「どちらもn1で同じ値」のいずれかのメッセージ*/
/*				で表示し、更に2数の差の絶対値を表示する。2数も大小判定と差の*/
/*				絶対値計算は,関数int numCmpAbs;で実現する。ここで、引数n1と */
/*				引数n2は入力した2数,戻り値は大小関係をstrcmp()と同様な整数値*/
/*				とする。これは(n1-n2)を返せばこのような値になるはず。そして,*/
/*				間接参照の引数*absにはn1,n2の差の絶対値を返すこと。			*/
/*				文字列リテラルやエスケープシーケンスを含めて表示する。		*/
/* 作成者	:	西野耀一郎													*/
/* 作成日	:	2019/04/24													*/
/* ************************************************************************ */
#include <stdio.h>

int numCmpAbs(int n1, int n2, int *abs); /*プロトタイプ宣言*/
int numin_n(int *num);	
	
void main(){
	
	int n1, n2;
	int abs; /*numin_n関数*/
	int kaerichi; /*numCmpAbs関数*/
	
	printf("Input Numeral\n");
	kaerichi = numin_n(&n1); /*numin_n関数呼び出し*/
	
	if (kaerichi == -1){  /*numin_nで異常が返ったら*/
		printf("Error\n");
		return; /*終了*/
	}
	printf("Input Numeral\n");
	kaerichi = numin_n(&n2); /*numin_n呼び出し*/
	
	if (kaerichi == -1){ /*numin_nで異常が返ったら*/
		printf("Error\n");
		return; /*終了*/
	}
	
	numCmpAbs(n1, n2, &abs); /*numCmpAbs呼び出し*/
	
	if (n1 > n2){ /*大小判定結果*/
		printf("%dは%dより大きい\n", n1, n2);
	} else if (n2 > n1){
		printf("%dは%dより大きい\n", n2, n1);
	} else {
		printf("どちらも%dで同じ値\n", n1);
	}

		printf("絶対値は%d\n", abs); /*numCmpAbsを間接参照*/
}
/****************************************************************************/
/* 関数名	:	numin_n														*/
/* 機能		:	キーボードから0以上の整数を入力させ、数値化する。負数入力も	*/
/*              入力可。													*/
/*																			*/
/* 引数		:	入力した2数													*/
/*																			*/
/* 戻り値	:	入力結果(0:正常 -1:異常)									*/
/****************************************************************************/
int numin_n(int *num) {

	int n, flag; /*flagはマイナスが入力された時の正常異常の判定*/
	*num = 0; /*初期化*/
	flag = 0; /*初期化*/	
	
	if ((n = getchar()) == '-' && flag == 0){ /*入力した文字がマイナスかつフラグが0の時*/
		
		flag = 1; /*フラグ*/
		n = getchar();
	} 
	
	if (n == '\n'){
		return -1;
	}
	while (n != '\n'){ /*'\n'ではない限り継続*/
	
		if (n >= '0' && n <= '9'){ /*入力された数字が0以上かつ9以下の時*/
		
			*num = *num * 10 + (n - '0'); /*10進数の数値に変換*/
			 n = getchar(); /*次の文字を取得*/
			 
		} else {
			return -1; /*異常と返す*/
		}
	}
	
	if (flag == 1){ /*マイナスが入力されたら*/
		*num = *num * -1;
	}
	return 0; /*正常と返す*/
} 
/****************************************************************************/
/* 関数名	:	numCmpAbs													*/
/* 機能		:	2数の大小判定と差の絶対値計算								*/
/*																			*/
/* 引数		:	入力した2数と絶対値											*/
/*																			*/
/* 戻り値	:	(0:等しい 正:n1が大きい 負:n2が大きい)						*/
/****************************************************************************/
int numCmpAbs(int n1, int n2, int *abs){ /*main()でのポインタの指す値*/

	if (n1 > n2){
		*abs = n1 - n2; /*absの箱に入れる*/
		
	}else if (n1 < n2) {
		*abs = n2 - n1; /*同上*/
		
	} else {
		*abs = 0;
	}
	return (n1 - n2); /*(n1 - n2)を返す*/
}
